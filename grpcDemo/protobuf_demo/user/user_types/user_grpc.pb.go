// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.6.1
// source: protobuf_demo/user/proto/user.proto

package user_types

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	data_types "protobuf_demo/data/data_types"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// DescribeUserClient is the client API for DescribeUser service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type DescribeUserClient interface {
	DescribeUser(ctx context.Context, in *data_types.Request, opts ...grpc.CallOption) (*data_types.Response, error)
}

type describeUserClient struct {
	cc grpc.ClientConnInterface
}

func NewDescribeUserClient(cc grpc.ClientConnInterface) DescribeUserClient {
	return &describeUserClient{cc}
}

func (c *describeUserClient) DescribeUser(ctx context.Context, in *data_types.Request, opts ...grpc.CallOption) (*data_types.Response, error) {
	out := new(data_types.Response)
	err := c.cc.Invoke(ctx, "/user.DescribeUser/describeUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DescribeUserServer is the server API for DescribeUser service.
// All implementations must embed UnimplementedDescribeUserServer
// for forward compatibility
type DescribeUserServer interface {
	DescribeUser(context.Context, *data_types.Request) (*data_types.Response, error)
	mustEmbedUnimplementedDescribeUserServer()
}

// UnimplementedDescribeUserServer must be embedded to have forward compatible implementations.
type UnimplementedDescribeUserServer struct {
}

func (UnimplementedDescribeUserServer) DescribeUser(context.Context, *data_types.Request) (*data_types.Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DescribeUser not implemented")
}
func (UnimplementedDescribeUserServer) mustEmbedUnimplementedDescribeUserServer() {}

// UnsafeDescribeUserServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to DescribeUserServer will
// result in compilation errors.
type UnsafeDescribeUserServer interface {
	mustEmbedUnimplementedDescribeUserServer()
}

func RegisterDescribeUserServer(s grpc.ServiceRegistrar, srv DescribeUserServer) {
	s.RegisterService(&DescribeUser_ServiceDesc, srv)
}

func _DescribeUser_DescribeUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(data_types.Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DescribeUserServer).DescribeUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.DescribeUser/describeUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DescribeUserServer).DescribeUser(ctx, req.(*data_types.Request))
	}
	return interceptor(ctx, in, info, handler)
}

// DescribeUser_ServiceDesc is the grpc.ServiceDesc for DescribeUser service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var DescribeUser_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "user.DescribeUser",
	HandlerType: (*DescribeUserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "describeUser",
			Handler:    _DescribeUser_DescribeUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protobuf_demo/user/proto/user.proto",
}
